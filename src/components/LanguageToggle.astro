---
// Timezone Config
import moment from "moment-timezone";
import { getCountryForTimezone } from "countries-and-timezones";

// Images
import { Image } from "astro:assets";
import USFlag from "../images/flags/US.png";
import UKFlag from "../images/flags/UK.png";
import ESFlag from "../images/flags/ES.png";

const lang: "en" | "es" = Astro.currentLocale as "en" | "es";

const getUserCountry = () => {
  return getCountryForTimezone(moment.tz.guess());
};

const englishFlag = getUserCountry()?.id === "US" ? USFlag : UKFlag;
---

<button
  id="language-toggle"
  class="relative w-14 aspect-square touch-manipulation group"
>
  <Image
    id="english-flag"
    src={englishFlag}
    alt=""
    loading="eager"
    class="outline-slate-300 rounded-full transition-transform duration-500 group-hover:scale-125"
  />
  <Image
    id="spanish-flag"
    src={ESFlag}
    alt=""
    loading="eager"
    class="z-10 outline-slate-300 rounded-full transition-transform duration-500 group-hover:scale-125"
    class:list={{ hidden: lang !== "es" }}
  />
</button>
<style>
  img,
  button::after {
    --size: 1.75rem;

    position: absolute;
    top: calc(var(--size) / 2);
    right: calc(var(--size) / 2);

    width: var(--size);
    height: var(--size);

    transform: scale(1.125);
  }
</style>
<script>
  import tippy from "tippy.js";
  import "tippy.js/dist/tippy.css";
  import "tippy.js/animations/scale.css";

  const changeLanguage = () => {
    const spanishFlag = document.querySelector("#spanish-flag");
    spanishFlag?.classList.add("animate-duration-500");

    const html = document.querySelector("html");
    const selectedLanguage = html?.getAttribute("lang");

    if (selectedLanguage === "en") {
      spanishFlag?.classList.remove("hidden");
    } else {
      spanishFlag?.classList.add("animate-reverse");
    }
    spanishFlag?.classList.add("animate-fade");

    const ANIMATION_DURATION = 500;
    setTimeout(() => {
      location.pathname = selectedLanguage === "en" ? "/es" : "/en";
    }, ANIMATION_DURATION);
  };

  const setTooltipData = () => {
    const selectedLanguage = document
      .querySelector("html")
      ?.getAttribute("lang");

    const content = `
      <div class="px-2">
        <div class="flex items-center gap-3 mt-2">
          <div class="rounded-full p-1 bg-primary">
            <svg
              fill="none"
              height="24"
              viewBox="0 0 24 24"
              width="24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m3 5h12m-6-2v2m1.0482 9.5c-1.52737-1.5822-2.76747-3.4435-3.63633-5.5m6.08813 9h7m-8.5 3 5-10 5 10m-8.2489-16c-.968 5.7702-4.68141 10.6095-9.7511 13.129"
                stroke="#FFFF" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              />
            </svg>
          </div>
          <div>
            <span class="text-xs font-extralight text-slate-300">
              ${selectedLanguage === "en" ? "Current language" : "Idioma actual"}
            </span>
            <div class="text-base text-white">
              ${selectedLanguage === "en" ? "English" : "Español"}
            </div>
          </div>
        </div>
        <hr class="my-2 border-slate-500" />
        <div class="font-light text-slate-300 mb-2">
          ${selectedLanguage === "en" ? "Press to switch to Spanish" : "Presiona para cambiar a Inglés"}
        </div>
      </div>
    `;

    tippy(`#language-toggle`, {
      content,
      allowHTML: true,
      placement: "bottom",
      arrow: false,
      animation: "scale",
      offset: [0, 16],
      duration: 250,
    });
  };

  document.addEventListener("DOMContentLoaded", setTooltipData);

  document
    .querySelector("#language-toggle")
    ?.addEventListener("click", changeLanguage);
</script>
